{
  "Resources" : {
    "Vpc" : {
       "Type" : "AWS::EC2::VPC",
       "Properties" : {
          "CidrBlock" : "10.0.0.0/16",
          "EnableDnsHostnames" : "true",
          "Tags" : [{
            "Key":"Name",
            "Value":"Mesos Demo VPC"
          }]
       }
    },     
    "Subnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "us-east-1e",
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : "10.0.0.0/24",
        "Tags" : [ {"Key" : "Name", "Value" : "Mesos Demo Subnet"} ]
      }
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "Mesos Demo Gateway" } ]
      }
    },
    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "Vpc" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },
    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "Vpc"},
        "Tags" : [ {"Key" : "Name", "Value" : "Mesos Demo Route Table"} ]
      }
    },
    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "SubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },
    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "Vpc"},
        "Tags" : [ {"Key" : "Application", "Value" : "Mesos Demo Network ACL" } ]
      }
    },

    "InboundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },
    
    "OutBoundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "104",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },
    "SubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "MesosMasterIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "MesosMaster" }
      }
    },
    "PuppetMasterIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "PuppetMaster" }
      }
    },
    "MesosMasterSecurityGroup" : {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {"Ref" : "Vpc"},
        "GroupDescription": "Mesos Master Security Group",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "2181",
            "ToPort": "2181",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "2888",
            "ToPort": "2888",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3888",
            "ToPort": "3888",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5050",
            "ToPort": "5050",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5050",
            "ToPort": "5050",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22002",
            "ToPort": "22002",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Mesos Master Security Group"
          }
        ]
      }
    },
    "MesosSlaveSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {"Ref" : "Vpc"},
        "GroupDescription": "Mesos Slave Security Group",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "2181",
            "ToPort": "2181",
           "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "2888",
            "ToPort": "2888",
           "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3888",
            "ToPort": "3888",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5051",
            "ToPort": "5051",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "31000",
            "ToPort": "61000",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "31000",
            "ToPort": "61000",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "31000",
            "ToPort": "61000",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "31000",
            "ToPort": "61000",
           "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "31000",
            "ToPort": "61000",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Mesos Slave Security Group"
          }
        ]
      }
    },
    "PuppetSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "GroupDescription" : "puppetagent",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "8140", "ToPort" : "8140", "CidrIp" : "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort" : "61613", "ToPort" : "61613", "CidrIp" : "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"},
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ],
        "Tags" : [ {"Key" : "Name", "Value" : "Puppet Security Group"} ]
      }
    },
    "MesosMaster": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": "mesosdemo",
        "SecurityGroupIds": [
          {
            "Ref": "MesosMasterSecurityGroup"
          },
          {
            "Ref": "PuppetSecurityGroup"  
          }
        ],
        "SubnetId": { "Ref": "Subnet" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!\/bin\/sh -v\n",
                "# Set basic variables for cloud-init\n",
                "ROLE='demo_mesosmaster'\n",
                "MASTER='https:\/\/52.2.187.196'\n",
                "D_ROLE=$(echo $ROLE | tr '_' '-')\n",
                "D_IP=$(hostname -I | tr '.' '-' | cut -d' ' -f1)\n",
                "HOSTNAME=\"$(echo $D_ROLE)-$(echo $D_IP)\"\n",
                "echo \"127.0.0.1 $HOSTNAME\" >> \/etc\/hosts\n",
                "echo \"52.2.187.196 puppet\" >> \/etc\/hosts\n",
                "# Execute update to ensure we have recent packages\n",
                "apt-get update && apt-get upgrade\n",
                "# Set the hostname\n",
                "echo $HOSTNAME > \/etc\/hostname\n",
                "\/bin\/hostname $HOSTNAME\n",
                "# Set the $::role fact\n",
                "echo $ROLE > \/etc\/role\n",
                "# Install the Puppet Agent\n",
                "sudo curl -k $MASTER:8140\/packages\/current\/install.bash | sudo bash\n"
              ]
            ]
          }
        },
        "InstanceType": "t2.medium",
        "AvailabilityZone": "us-east-1e",
        "ImageId": "ami-86562dee",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo_mesosmaster"
          }
        ]
      }
    }, 
    "MesosSlave2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": "mesosdemo",
        "SecurityGroupIds": [
          {
            "Ref": "MesosSlaveSecurityGroup"
          },
          {
            "Ref": "PuppetSecurityGroup"  
          }
        ],
        "SubnetId": { "Ref": "Subnet" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!\/bin\/sh -v\n",
                "# Set basic variables for cloud-init\n",
                "ROLE='demo_mesosslave'\n",
                "MASTER='https:\/\/52.2.187.196'\n",
                "D_ROLE=$(echo $ROLE | tr '_' '-')\n",
                "D_IP=$(hostname -I | tr '.' '-' | cut -d' ' -f1)\n",
                "HOSTNAME=\"$(echo $D_ROLE)-$(echo $D_IP)\"\n",
                "echo \"127.0.0.1 $HOSTNAME\" >> \/etc\/hosts\n",
                "echo \"52.2.187.196 puppet\" >> \/etc\/hosts\n",
                "# Execute update to ensure we have recent packages\n",
                "apt-get update && apt-get upgrade\n",
                "# Set the hostname\n",
                "echo $HOSTNAME > \/etc\/hostname\n",
                "\/bin\/hostname $HOSTNAME\n",
                "# Set the $::role fact\n",
                "echo $ROLE > \/etc\/role\n",
                "# Install the Puppet Agent\n",
                "sudo curl -k $MASTER:8140\/packages\/current\/install.bash | sudo bash\n"
              ]
            ]
          }
        },
        "InstanceType": "t2.medium",
        "AvailabilityZone": "us-east-1e",
        "ImageId": "ami-86562dee",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo_mesosslave"
          }
        ]
      }
    },
    "MesosSlave1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": "mesosdemo",
        "SecurityGroupIds": [
          {
            "Ref": "MesosSlaveSecurityGroup"
          },
          {
            "Ref": "PuppetSecurityGroup"  
          }
        ],
        "SubnetId": { "Ref": "Subnet" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!\/bin\/sh -v\n",
                "# Set basic variables for cloud-init\n",
                "ROLE='demo_mesosslave'\n",
                "MASTER='https:\/\/52.2.187.196'\n",
                "D_ROLE=$(echo $ROLE | tr '_' '-')\n",
                "D_IP=$(hostname -I | tr '.' '-' | cut -d' ' -f1)\n",
                "HOSTNAME=\"$(echo $D_ROLE)-$(echo $D_IP)\"\n",
                "echo \"127.0.0.1 $HOSTNAME\" >> \/etc\/hosts\n",
                "echo \"52.2.187.196 puppet\" >> \/etc\/hosts\n",
                "# Execute update to ensure we have recent packages\n",
                "apt-get update && apt-get upgrade\n",
                "# Set the hostname\n",

                "echo $HOSTNAME > \/etc\/hostname\n",
                "\/bin\/hostname $HOSTNAME\n",
                "# Set the $::role fact\n",
                "echo $ROLE > \/etc\/role\n",
                "# Install the Puppet Agent\n",
                "sudo curl -k $MASTER:8140\/packages\/current\/install.bash | sudo bash\n"
              ]
            ]
          }
        },
        "InstanceType": "t2.medium",
        "AvailabilityZone": "us-east-1e",
        "ImageId": "ami-86562dee",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo_mesosslave"
          }
        ]
      }
    },
    "PuppetMaster": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": "mesosdemo",
        "SecurityGroupIds": [
          {
            "Ref": "PuppetSecurityGroup"  
          }
        ],
        "SubnetId": { "Ref": "Subnet" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!\/bin\/sh -v\n",
                "# Set basic variables for cloud-init\n",
                "ROLE='demo_puppetmaster'\n",
                "D_ROLE=$(echo $ROLE | tr '_' '-')\n",
                "D_IP=$(hostname -I | tr '.' '-' | cut -d' ' -f1)\n",
                "HOSTNAME=\"$(echo $D_ROLE)-$(echo $D_IP)\"\n",
                "echo \"127.0.0.1 $HOSTNAME\" >> \/etc\/hosts",
                "# Execute update to ensure we have recent packages\n",
                "apt-get update && apt-get upgrade\n",
                "# Set the hostname\n",
                "echo $HOSTNAME > \/etc\/hostname\n",
                "\/bin\/hostname $HOSTNAME\n",
                "# Set the $::role fact\n",
                "echo $ROLE > \/etc\/role\n"
              ]
            ]
          }
        },
        "InstanceType": "m3.large",
        "AvailabilityZone": "us-east-1e",
        "ImageId": "ami-86562dee",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo_puppetmaster"
          }
        ]
      }
    }
  }
}
